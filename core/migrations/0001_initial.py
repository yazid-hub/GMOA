# Generated by Django 5.2.4 on 2025-07-08 10:33

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategorieAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParametreGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cle', models.CharField(max_length=100, unique=True)),
                ('valeur', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PieceDetachee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('nom', models.CharField(max_length=255)),
                ('stock_actuel', models.PositiveIntegerField(default=0)),
                ('seuil_alerte_stock', models.PositiveIntegerField(default=0, help_text='Le système alertera si le stock passe sous ce seuil.')),
                ('cout_unitaire', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='StatutWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('couleur_html', models.CharField(default='#808080', help_text='Code couleur Hex. Ex: #FF5733', max_length=7)),
                ('est_statut_final', models.BooleanField(default=False, help_text="Cocher si c'est un statut de clôture (Terminé, Annulé).")),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('marque', models.CharField(blank=True, max_length=100, null=True)),
                ('modele', models.CharField(blank=True, max_length=100, null=True)),
                ('date_achat', models.DateField(blank=True, null=True)),
                ('date_mise_en_service', models.DateField(blank=True, null=True)),
                ('fin_garantie', models.DateField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('EN_SERVICE', 'En service'), ('EN_PANNE', 'En panne'), ('EN_MAINTENANCE', 'En maintenance'), ('HORS_SERVICE', 'Hors service')], default='EN_SERVICE', max_length=20)),
                ('criticite', models.PositiveIntegerField(choices=[(1, 'Basse'), (2, 'Moyenne'), (3, 'Haute'), (4, 'Critique')], default=2)),
                ('localisation_texte', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('photo_principale', models.ImageField(blank=True, null=True, upload_to='asset_photos/')),
                ('qr_code_identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enfants', to='core.asset')),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.categorieasset')),
            ],
        ),
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('chef_equipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipes_dirigees', to=settings.AUTH_USER_MODEL)),
                ('membres', models.ManyToManyField(related_name='equipes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, help_text="Décrivez l'objectif général de cette intervention.", null=True)),
                ('statut', models.CharField(choices=[('DRAFT', 'Brouillon'), ('VALIDATED', 'Validé'), ('ARCHIVED', 'Archivé')], default='DRAFT', max_length=20)),
                ('duree_estimee_heures', models.PositiveIntegerField(default=1, help_text="Durée estimée de l'intervention en heures.")),
                ('techniciens_requis', models.PositiveIntegerField(default=1, help_text='Nombre de techniciens nécessaires.')),
                ('competences_requises', models.ManyToManyField(blank=True, help_text='Compétences suggérées pour réaliser cette intervention.', to='core.competence')),
                ('pieces_necessaires', models.ManyToManyField(blank=True, help_text='Nomenclature des pièces habituellement nécessaires.', to='core.piecedetachee')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('type_notification', models.CharField(choices=[('INFO', 'Information'), ('ALERTE', 'Alerte'), ('ERREUR', 'Erreur'), ('SUCCES', 'Succès')], default='INFO', max_length=20)),
                ('lue', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('ordre', models.PositiveIntegerField(default=1)),
                ('intervention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='core.intervention')),
            ],
            options={
                'ordering': ['ordre'],
                'unique_together': {('intervention', 'ordre')},
            },
        ),
        migrations.CreateModel(
            name='OrdreDeTravail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('type_OT', models.CharField(choices=[('PREVENTIVE', 'Préventive'), ('CORRECTIVE', 'Corrective'), ('PREDICTIVE', 'Prédictive'), ('INSPECTION', 'Inspection'), ('AUDIT', 'Audit'), ('AUTRE', 'Autre')], default='AUTRE', max_length=20)),
                ('priorite', models.PositiveIntegerField(choices=[(1, 'Basse'), (2, 'Normale'), (3, 'Haute'), (4, 'Urgente')], default=2)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_prevue_debut', models.DateTimeField()),
                ('date_debut_reel', models.DateTimeField(blank=True, help_text="Date et heure réelles du début de l'intervention.", null=True)),
                ('date_fin_reelle', models.DateTimeField(blank=True, help_text="Date et heure réelles de la fin de l'intervention.", null=True)),
                ('cout_main_oeuvre_reel', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cout_pieces_reel', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.asset')),
                ('assigne_a_equipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.equipe')),
                ('assigne_a_technicien', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taches_assignees', to=settings.AUTH_USER_MODEL)),
                ('cree_par', models.ForeignKey(help_text="L'utilisateur qui a initialement créé l'ordre de travail.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordres_de_travail_crees', to=settings.AUTH_USER_MODEL)),
                ('intervention', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.intervention')),
                ('statut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.statutworkflow')),
            ],
        ),
        migrations.CreateModel(
            name='CommentaireOT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ordre_de_travail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires', to='core.ordredetravail')),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='MouvementStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_mouvement', models.CharField(choices=[('ENTREE', 'Entrée'), ('SORTIE', 'Sortie'), ('TRANSFERT', 'Transfert'), ('AJUSTEMENT', 'Ajustement')], max_length=20)),
                ('quantite', models.IntegerField()),
                ('date_mouvement', models.DateTimeField(default=django.utils.timezone.now)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('effectue_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ordre_de_travail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mouvements_stock', to='core.ordredetravail')),
                ('piece_detachee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mouvements', to='core.piecedetachee')),
            ],
        ),
        migrations.CreateModel(
            name='PlanMaintenancePreventive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequence_jours', models.PositiveIntegerField(blank=True, null=True)),
                ('date_prochaine_echeance', models.DateField(blank=True, null=True)),
                ('actif', models.BooleanField(default=True)),
                ('asset_concerne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans_maintenance', to='core.asset')),
                ('intervention', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.intervention')),
            ],
        ),
        migrations.CreateModel(
            name='PointDeControle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('type_champ', models.CharField(choices=[('TEXT', 'Texte libre'), ('NUMBER', 'Nombre'), ('BOOLEAN', 'Oui/Non'), ('SELECT', 'Liste de choix'), ('TEXTAREA', 'Zone de texte'), ('DATE', 'Date'), ('TIME', 'Heure'), ('DATETIME', 'Date et heure')], default='TEXT', max_length=20)),
                ('aide', models.TextField(blank=True, help_text="Instructions pour l'utilisateur.", null=True)),
                ('options', models.TextField(blank=True, help_text='Pour les listes, séparez les options par un point-virgule (;).', null=True)),
                ('est_obligatoire', models.BooleanField(default=False)),
                ('ordre', models.PositiveIntegerField(default=1)),
                ('condition_affichage', models.CharField(blank=True, help_text="Condition à remplir sur le champ parent. Ex: 'OUI', '> 5', 'CONFORME'", max_length=100, null=True)),
                ('permettre_photo', models.BooleanField(default=False, help_text="Autoriser l'ajout d'une ou plusieurs photos à cette réponse.")),
                ('permettre_audio', models.BooleanField(default=False, help_text="Autoriser l'enregistrement d'un commentaire audio.")),
                ('permettre_video', models.BooleanField(default=False, help_text="Autoriser l'enregistrement d'une vidéo.")),
                ('depend_de', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dependances', to='core.pointdecontrole')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points_de_controle', to='core.operation')),
            ],
            options={
                'ordering': ['ordre'],
            },
        ),
        migrations.CreateModel(
            name='ProfilUtilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('MANAGER', 'Manager'), ('TECHNICIEN', 'Technicien'), ('OPERATEUR', 'Opérateur'), ('SUPERVISEUR', 'Superviseur')], default='OPERATEUR', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RapportExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut_rapport', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('EN_COURS', 'En cours'), ('FINALISE', 'Finalisé'), ('ARCHIVE', 'Archivé')], default='BROUILLON', max_length=20)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_derniere_maj', models.DateTimeField(auto_now=True)),
                ('date_execution_debut', models.DateTimeField(blank=True, null=True)),
                ('date_execution_fin', models.DateTimeField(blank=True, null=True)),
                ('commentaire_global', models.TextField(blank=True, help_text="Commentaire général sur l'intervention.", null=True)),
                ('cree_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rapports_crees', to=settings.AUTH_USER_MODEL)),
                ('ordre_de_travail', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rapport', to='core.ordredetravail')),
            ],
        ),
        migrations.CreateModel(
            name='ActionCorrective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('priorite', models.PositiveIntegerField(choices=[(1, 'Basse'), (2, 'Normale'), (3, 'Haute'), (4, 'Urgente')], default=2)),
                ('statut', models.CharField(choices=[('A_PLANIFIER', 'À planifier'), ('PLANIFIEE', 'Planifiée'), ('EN_COURS', 'En cours'), ('TERMINEE', 'Terminée'), ('ANNULEE', 'Annulée')], default='A_PLANIFIER', max_length=20)),
                ('date_echeance', models.DateField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('assigne_a', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('cree_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions_correctives_creees', to=settings.AUTH_USER_MODEL)),
                ('rapport_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions_correctives', to='core.rapportexecution')),
            ],
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valeur', models.TextField(blank=True, null=True)),
                ('date_reponse', models.DateTimeField(default=django.utils.timezone.now)),
                ('point_de_controle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pointdecontrole')),
                ('rapport_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='core.rapportexecution')),
                ('saisi_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('rapport_execution', 'point_de_controle')},
            },
        ),
        migrations.CreateModel(
            name='FichierMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_fichier', models.CharField(choices=[('PHOTO', 'Photo'), ('AUDIO', 'Audio'), ('VIDEO', 'Vidéo'), ('DOCUMENT', 'Document')], max_length=20)),
                ('fichier', models.FileField(upload_to='media_rapports/')),
                ('nom_original', models.CharField(max_length=255)),
                ('taille_octets', models.PositiveBigIntegerField()),
                ('date_upload', models.DateTimeField(default=django.utils.timezone.now)),
                ('reponse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fichiers_media', to='core.reponse')),
            ],
        ),
        migrations.CreateModel(
            name='AttributPersonnaliseAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cle', models.CharField(help_text="Nom du champ personnalisé. Ex: 'Couleur RAL'", max_length=100)),
                ('valeur', models.CharField(help_text="Valeur du champ. Ex: '5015'", max_length=255)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributs_perso', to='core.asset')),
            ],
            options={
                'unique_together': {('asset', 'cle')},
            },
        ),
        migrations.CreateModel(
            name='ParametreUtilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cle', models.CharField(max_length=100)),
                ('valeur', models.TextField()),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parametres', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('utilisateur', 'cle')},
            },
        ),
        migrations.CreateModel(
            name='UtilisateurCompetence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.PositiveIntegerField(choices=[(1, 'Débutant'), (2, 'Intermédiaire'), (3, 'Expert')], default=1)),
                ('date_obtention', models.DateField(default=django.utils.timezone.now)),
                ('competence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.competence')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('utilisateur', 'competence')},
            },
        ),
    ]
