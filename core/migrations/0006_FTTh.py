# Generated by Django 5.2.4 on 2025-07-12 19:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_add_upadate_by_media'),
    ]

    operations = [
        migrations.CreateModel(
            name='ZoneGeographique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=10)),
                ('commune', models.CharField(max_length=100)),
                ('type_zone', models.CharField(choices=[('ZONE_DENSE', 'Zone très dense'), ('ZONE_MOINS_DENSE', 'Zone moins dense'), ('ZONE_RURALE', 'Zone rurale')], max_length=20)),
                ('contour_geojson', models.JSONField(help_text='Contour géographique de la zone')),
                ('nb_logements_total', models.PositiveIntegerField(default=0)),
                ('nb_logements_eligibles', models.PositiveIntegerField(default=0)),
                ('taux_raccordement', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='geometrie_geojson',
            field=models.JSONField(blank=True, help_text="Géométrie de l'asset (point, ligne, polygone)", null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='nb_fibres_total',
            field=models.PositiveIntegerField(blank=True, help_text='Nombre total de fibres', null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='nb_fibres_utilisees',
            field=models.PositiveIntegerField(default=0, help_text='Nombre de fibres utilisées'),
        ),
        migrations.AddField(
            model_name='asset',
            name='niveau_hierarchique',
            field=models.PositiveIntegerField(default=1, help_text='1=NRO, 2=PM, 3=PB, 4=PTO'),
        ),
        migrations.AddField(
            model_name='asset',
            name='type_connecteur',
            field=models.CharField(blank=True, choices=[('SC', 'SC'), ('LC', 'LC'), ('FC', 'FC'), ('ST', 'ST'), ('E2000', 'E2000')], max_length=10),
        ),
        migrations.CreateModel(
            name='PlanSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('type_plan', models.CharField(choices=[('PLAN_MASSE', 'Plan de masse'), ('SCHEMA_SYNOPTIQUE', 'Schéma synoptique'), ('PLAN_DETAIL', 'Plan de détail'), ('SCHEMA_RACCORDEMENT', 'Schéma de raccordement')], max_length=30)),
                ('fichier_plan', models.FileField(upload_to='plans_ftth/')),
                ('fichier_dwg', models.FileField(blank=True, null=True, upload_to='plans_ftth/dwg/')),
                ('emprise_geojson', models.JSONField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('version', models.CharField(default='1.0', max_length=10)),
                ('assets_concernes', models.ManyToManyField(blank=True, to='core.asset')),
                ('zone_geographique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.zonegeographique')),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='zone_geographique',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.zonegeographique'),
        ),
        migrations.CreateModel(
            name='ConnexionFibre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_connexion', models.CharField(choices=[('FIBRE', 'Fibre optique'), ('CUIVRE', 'Cuivre'), ('COAXIAL', 'Coaxial'), ('WIRELESS', 'Sans fil')], default='FIBRE', max_length=20)),
                ('numero_fibre', models.PositiveIntegerField(blank=True, help_text='Numéro de fibre dans le câble', null=True)),
                ('couleur_fibre', models.CharField(blank=True, help_text='Couleur identification fibre', max_length=20)),
                ('longueur_metres', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('affaiblissement_db', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('trace_geojson', models.JSONField(blank=True, help_text='Tracé géographique de la connexion', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('actif', models.BooleanField(default=True)),
                ('asset_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connexions_entrantes', to='core.asset')),
                ('asset_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connexions_sortantes', to='core.asset')),
            ],
            options={
                'unique_together': {('asset_source', 'asset_destination', 'numero_fibre')},
            },
        ),
    ]
